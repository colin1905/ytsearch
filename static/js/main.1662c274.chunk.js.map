{"version":3,"sources":["components/SearchBar.js","apis/youtube.js","components/VideoItem.js","components/VideoList.js","components/VideoDetail.js","components/App.js","index.js"],"names":["SearchBar","state","term","onInputChange","event","_this","setState","target","value","onFormSubmit","preventDefault","props","react_default","a","createElement","className","onSubmit","this","type","onChange","React","Component","axios","create","baseURL","params","part","maxResults","key","concat","VideoItem","_ref","video","onVideoSelect","onClick","alt","snippet","title","src","thumbnails","medium","url","VideoList","videos","renderedList","map","src_components_VideoItem","id","videoId","VideoDetail","videoSrc","description","App","selectedVideo","onTermSubmit","_callee","response","regenerator_default","wrap","_context","prev","next","youtube","get","q","sent","data","items","stop","components_SearchBar","components_VideoDetail","components_VideoList","ReactDOM","render","components_App","document","querySelector"],"mappings":"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","file":"static/js/main.1662c274.chunk.js","sourcesContent":["import React from 'react';\n\nclass SearchBar extends React.Component {\n  state = { term: '' };\n\n\n  onInputChange = (event) => {\n    this.setState({ term: event.target.value })\n  }\n\n  onFormSubmit = event => {\n    event.preventDefault();\n\n    this.props.onFormSubmit(this.state.term);\n  }\n\n  render() {\n    return (\n    <div className=\"search-bar ui segment\">\n      <form onSubmit={this.onFormSubmit} className=\"ui form\">\n        <div className=\"field\">\n          <label>YouTube Search</label>\n          <input \n            type=\"text\" \n            value={this.state.term}\n            onChange={this.onInputChange}\n          />\n        </div>\n      </form>\n    </div>\n    )\n  }\n}\n\nexport default SearchBar;","import axios from 'axios';\n\nconst KEY = 'AIzaSyBeSDBDOSDcU8IFGwqGv0-ki_826-2yQbE';\n\nexport default axios.create({\n  baseURL: 'https://www.googleapis.com/youtube/v3',\n  params: {\n    part: 'snippet', \n    type: 'video',\n    maxResults: 5,\n    key: `${KEY}`\n}\n})","import React from 'react';\nimport './VideoItem.css';\n\nconst VideoItem = ({ video, onVideoSelect }) => {\n  return (\n    <div onClick={() => onVideoSelect(video)} className=\"video-item item\">\n      <img alt={video.snippet.title} className=\"ui image\" src={video.snippet.thumbnails.medium.url} />\n      <div className=\"content\">\n        <div className=\"header\">{video.snippet.title}</div>\n      </div>\n      \n      \n    </div>)\n}\n\nexport default VideoItem;","import React from 'react';\nimport VideoItem from './VideoItem'\n\nconst VideoList = ({videos, onVideoSelect }) => {\n  const renderedList = videos.map((video) => {\n    return <VideoItem key={video.id.videoId} onVideoSelect={onVideoSelect} video={video} />;\n  })\n  return <div className=\"ui relaxed divided list\">{renderedList}</div>\n}\n\nexport default VideoList;","import React from 'react';\n\nconst VideoDetail = ({video}) => {\n  if(!video) {\n    return <div>Loading...</div>\n  }\n\n  const videoSrc = `https://www.youtube.com/embed/${video.id.videoId}`\n\n  return (\n    <div>\n      <div className=\"ui embed\">\n        <iframe title=\"video player\" src={videoSrc} />\n      </div>\n      <div className=\"ui segment\">\n        <h4>{video.snippet.title}</h4>\n        <p>{video.snippet.description}</p>\n      </div>\n    </div>\n    );\n}\n\nexport default VideoDetail;","import React from 'react';\nimport SearchBar from './SearchBar';\nimport youtube from '../apis/youtube';\nimport VideoList from './VideoList';\nimport VideoDetail from './VideoDetail';\n\nclass App extends React.Component {\n\n  state = { videos: [], selectedVideo: null };\n\n  //this is the default search for the application\n  componentDidMount(){\n    this.onTermSubmit('buildings');\n  }\n\n  //callback method called anytime someone submits the SearchBar form\n  //async operation, so we use that syntax\n  onTermSubmit = async term => {\n    //pre-configured instance of axios\n    //this is the entire response object, with lots of info\n    // about the request. but we only care about the data prop (items, the array\n    // of videos to be shown on the screen)\n    // we  take that list and set them as state on our component\n    const response = await youtube.get('/search', {\n      params: {\n        q: term //argument that had been passed into onTermSubmit function\n      }\n    });\n\n    this.setState({\n      videos: response.data.items,\n      // updates selected video immediately on search (first video in result set)\n      selectedVideo: response.data.items[0]\n     });\n  };\n\n  //all callback functions defined as arrow functions\n  // this video object is the object that we fetch from the youtube API\n  onVideoSelect = video => {\n    //updates state on the App class\n    this.setState({ selectedVideo: video});\n  };\n\n  render() {\n    //Videolist needs access to that array\n    return (\n      <div className=\"ui container\">\n        <SearchBar onFormSubmit={this.onTermSubmit}/>\n        <div className=\"ui grid\">\n          <div className=\"ui row\">\n            <div className=\"eleven wide column\">\n            <VideoDetail video={this.state.selectedVideo}/>\n            </div>\n            <div className=\"five wide column\">\n            <VideoList onVideoSelect={this.onVideoSelect} videos={this.state.videos} />\n            </div>\n          </div>\n        </div>\n\n      </div>);\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\n\n\nReactDOM.render(<App />, document.querySelector('#root'));\n"],"sourceRoot":""}